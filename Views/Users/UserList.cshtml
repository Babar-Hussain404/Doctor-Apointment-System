@model IEnumerable<DocApp.Models.User>
@using System.Security.Claims

@{
    ViewData["Title"] = "User List";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Dashboard /</span> Booking</h4>

    <!-- Bordered Table -->
    
    <partial name="_Alerts" />

    <div class="card">
        <h5 class="card-header">Booking List</h5>
        <div class="card-body">
            <div class="table-responsive text-nowrap">
                <table id="booking-table" class="table" style="width:100%">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Email</th>
                            <th>DOB</th>
                            <th>Gender</th>
                            <th>User Type</th>
                            <th>CNIC</th>
                            <th>Phone no.</th>
                            <th>Address</th>
                            <th>Created On</th>
                            <th>Updated On</th>
                            <th>Deleted On</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.ToList())
                        {
                            var index = Model.ToList().IndexOf(user);
                            <tr>
                                <td>@(index + 1)</td>
                                <td>@user.FName</td>
                                <td>@user.LName</td>
                                <td>@user.Email</td>
                                <td>@user.DOB</td>
                                <td>@user.Gender</td>
                                <td>@user.UserType</td>
                                <td>@user.CNIC</td>
                                <td>@user.Phoneno</td>
                                <td>@user.Address</td>
                                <td>@user.CreatedOn</td>
                                <td>@user.UpdatedOn</td>
                                <td>@user.DeletedOn</td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
    <!--/ Bordered Table -->
    
</div>

@section scripts {
    <script src="https://cdn.datatables.net/1.11.0/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/dataTables.buttons.min.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.html5.min.js" type="text/javascript"></script>

    <script src="~/assets/js/datatables_pdf/pdfmake.min.js"></script>
    <script src="~/assets/js/datatables_pdf/vfs_fonts.js"></script>

    <script>

        $(document).ready(function () {
            $('#booking-table').DataTable({
                "scrollY": "70vh",
                "scrollCollapse": true,
                "scrollX": "auto",
                "pageLength": -1,

                buttons: {
                    buttons: [
                        {
                            extend: 'excelHtml5',
                            className: 'excelButton btn btn-sm btn-outline-success mb-2',
                            text: '<i class="fas fa-file-excel"></i> Excel'
                        },
                        {
                            extend: 'pdfHtml5',
                            className: 'pdfButton btn btn-sm btn-outline-danger mb-2',
                            text: '<i class="fas fa-file-pdf"></i> PDF'
                        }
                    ]
                },
                dom: 'Blftip',
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                
            });

            $(".pdfButton").click(function () {
                debugger
                GetPDF();
            });

            function GetPDF() {
                var pdfDoc = {
                    pageSize: 'A5',
                    fontSize: 8,
                    pageOrientation: 'landscape',
                    margin: [0, 20, 0, 8],

                };
                pdfMake.createPdf(pdfDoc);
            }

            // Customizing the pagination button style
            $('.paginate_button')
                .removeClass('btn-default')
                .addClass('btn btn-sm custom-pagination-button my-1')
                .attr('style', 'background-color: #696cff !important; color: #fff !important;');
            //Classes for styling datatable elements
            //dataTables_wrapper: The main wrapper element that contains the entire DataTables structure.
            //dataTables_filter: The wrapper element for the search/filtering input control.
            //dataTables_length: The wrapper element for the length changing input control.
            //dataTables_info: The wrapper element for the information summary (e.g., "Showing 1 to 10 of 100 entries").
            //dataTables_paginate: The wrapper element for the pagination control.
            //dataTables_processing: The wrapper element for the processing display element (e.g., a loading indicator).
            //buttons: The container element for DataTables buttons.
            //paginate_button: The individual pagination button elements.
            //sorting_asc / sorting_desc: The sorting indicator icons for ascending and descending sorting.
            //odd / even: The alternating row colors for striped tables.
        });


    </script>
}